knitr::opts_chunk$set(echo = FALSE)
im <- image_read("grafico_ponto.jpeg")
require("BiocManager")
require("BiocManager")
require("EBImage") # JPEG(JPG), PNG E TIFF
require("EBImage") # JPEG(JPG), PNG E TIFF
require("imager") # JPEG(JPG), PNG E BMP
require("magick")
library(tidyverse)
im <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/grafico_ponto.jpeg")
im <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/grafico_ponto.jpeg")
im <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/grafico_ponto.jpg")
im_proc <- im %>%
image_channel("saturation")
im_proc
tigre <- image_read_svg('http://jeroen.github.io/images/tiger.svg')
tigre <- image_read_svg('http://jeroen.github.io/images/tiger.svg')
tigre
tigre2 <- image_read_svg('http://jeroen.github.io/images/tiger.svg',
width = 120)
tigre2 <- image_read_svg('http://jeroen.github.io/images/tiger.svg',
width = 120)
tigre2
tigre_redimensionada <- image_scale(tigre, "120x120")
tigre_convertido <- image_convert(tigre, "jpeg")
image_info(tigre_convertido) # Retorna o formato da imagem
image_write(tigre, path = "tiger.png", format = "png")
frink <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/frink.png")
frink
bigdata <- image_read('C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/bigdata.jpg')
bigdata
logo <- image_read('C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/Rlogo.png')
logo
img <- c(bigdata, logo, frink)
img <- image_scale(img, "300x300")
image_info(img)
bigdatafrink <- image_scale(image_rotate(
image_background(frink, "none"), 300), "x160")
juntos <-image_composite(image_scale(
bigdata, "x330"), bigdatafrink, offset = "+180+100")
juntos
require(readr)
Estat.subida <- read_csv("C:/Users/nick_/OneDrive/Área de Trabalho/Mount_Rainier_Shiny/Lista04/climbing_statistics.csv")
Clima <- read_csv("C:/Users/nick_/OneDrive/Área de Trabalho/Mount_Rainier_Shiny/Lista04/Rainier_Weather.csv")
library(dplyr)
BD <- inner_join(Estat.subida, Clima, by = "Date")
BD <- filter(BD, Attempted >= Succeeded)
BD$`Success Percentage` <- round(BD$`Success Percentage`*100)
require(ggplot2)
require(ggforce)
PSxTEMP <- ggplot(BD, aes(`Temperature AVG`, `Success Percentage`), size = `Wind Speed Daily AVG`)+
theme_minimal() +
theme(axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
legend.text = element_text(size = 13),
legend.title = element_text(size=14)) +
labs(x = "Temperatura(Fº)",
y = "Porcentagem de Sucesso",
color = "Umidade média",
size = "Velocidade média do vento")+
geom_jitter( aes(color = `Relative Humidity AVG`, size = `Wind Speed Daily AVG`)) +
geom_ellipse(aes(x0 = 11.5, y0 = 0, a = 5.4, b = 3, angle = 0), linetype = "dashed",
colour = "darkred",size = 0.5) +
scale_colour_gradient(low = "light blue", high = "dark blue")
```{r 5.6, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
PSxTEMP
require(pdftools)
temp <- image_read_pdf("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/temp.pdf")
temp
image_write(temp, path = "temp.pdf", format = "pdf")
graph <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/Rplot1.png")
temp <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/low_temp.png")
temp_graph <- image_scale(image_rotate(image_background(
temp, "none"), 340), "x50")
temp_graph
juntos_2 <-image_composite(image_scale(
graph, "x600"), temp_graph, offset = "+150+440")
image_write(juntos_2, path = "juntos2.pdf", format = "pdf")
frink_anot <- image_annotate(frink, "Aqui", size = 15, color = "black", degrees = 30, location = "+190+410")
frink_anot
earth <- image_read("https://jeroen.github.io/images/earth.gif") %>%
image_scale("250x") %>%
image_quantize()
earth <- image_read("https://jeroen.github.io/images/earth.gif") %>%
image_scale("250x") %>%
image_quantize()
length(earth)
library(gifski)
library(tidyverse)
im <- image_read("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/grafico_ponto.jpg")
im_proc <- im %>%
image_channel("saturation")
im_proc
frink_anot <- image_annotate(frink, "Aqui", size = 15, color = "black", degrees = 30, location = "+190+410")
frink_anot
frink_anot <- image_scale(frink_anot, "x400")
frink_anot
frink_anot <- image_scale(frink_anot, "x350")
frink_anot
frink_anot <- image_annotate(frink, "Aqui", size = 18, color = "black", degrees = 30, location = "+190+410")
frink_anot <- image_scale(frink_anot, "x350")
frink_anot
frink_anot <- image_annotate(frink, "Aqui", size = 25, color = "black", degrees = 30, location = "+190+410")
frink_anot <- image_scale(frink_anot, "x350")
frink_anot
frink_anot <- image_annotate(frink, "Aqui", size = 25, color = "black", degrees = 30, location = "+150+310")
frink_anot <- image_scale(frink_anot, "x350")
frink_anot
frink_anot <- image_annotate(frink, "Aqui", size = 25, color = "black", degrees = 30, location = "+150+310")
frink_anot
frink_anot <- image_annotate(frink, "Aqui", size = 25, color = "black", degrees = 30, location = "+150+310")
frink_anot2 <- image_annotate(frink, "Aqui", size = 25, color = "red",
boxcolor = "black",degrees = 30, location = "+150+310")
frink_anot_1 <- image_scale(frink_anot, "x350")
frink_anot_2 <- image_scale(frink_anot2, "x350")
image_write(frink_anot_1, path = "frink1.png", format = "png")
image_write(frink_anot_2, path = "frink2.png", format = "png")
frink_anot <- image_annotate(frink, "Aqui", size = 25, color = "red",
boxcolor = "black",degrees = 30, location = "+150+310")
frink_anot <- image_scale(frink_anot, "x350")
image_write(frink_anot, path = "frink_anot.png", format = "png")
im_proc3 <- im_proc2 %>%
image_negate()
im_proc2 <- im_proc %>%
image_threshold("white", "30%")
im_proc3 <- im_proc2 %>%
image_negate()
dat <- image_data(im_proc)[1,,] %>%
as.data.frame() %>%
mutate(Row = 1:nrow(.)) %>%
select(Row, everything()) %>%
mutate_all(as.character) %>%
gather(key = Column, value = value, 2:ncol(.)) %>%
mutate(Column = as.numeric(gsub("V", "", Column)),
Row = as.numeric(Row),
value = ifelse(value == "00", NA, 1)) %>%
filter(!is.na(value))
View(dat)
ggplot(data = dat, aes(x = Row, y = Column, colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
grafico_final <-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
image_write(grafico_final, path = "IMAGENS/grafico_final.png",
format = "png")
grafico_final <-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
image_write(grafico_final, path = "IMAGENS/grafico_final.png",
format = "png")
image_write(grafico_final, path = "IMAGENS/grafico_final.png",
format = "png")
image_write(im_proc3, path = "IMAGENS/grafico_ponto3.png",
format = "png")
image_write(grafico_final, path = "IMAGENS/grafico_final.png",
format = "png")
grafico_final <-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")+
ggsave("grafico_final.png", width = 4, height = 4)
grafico_final
dat <- image_data(im_proc)[1,,] %>%
as.data.frame() %>%
mutate(Row = 1:nrow(.)) %>%
select(Row, everything()) %>%
mutate_all(as.character) %>%
gather(key = Column, value = value, 2:ncol(.)) %>%
mutate(Column = as.numeric(gsub("V", "", Column)),
Row = as.numeric(Row),
value = ifelse(value == "00", NA, 1)) %>%
filter(!is.na(value))
grafico_final <-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
ggplot(data = dat, aes(x = Row, y = Column, colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
require(tidyverse)
dat <- image_data(im_proc)[1,,] %>%
as.data.frame() %>%
mutate(Row = 1:nrow(.)) %>%
select(Row, everything()) %>%
mutate_all(as.character) %>%
gather(key = Column, value = value, 2:ncol(.)) %>%
mutate(Column = as.numeric(gsub("V", "", Column)),
Row = as.numeric(Row),
value = ifelse(value == "00", NA, 1)) %>%
filter(!is.na(value))
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
dat <- image_data(im_proc3)[1,,] %>%
as.data.frame() %>%
mutate(Row = 1:nrow(.)) %>%
select(Row, everything()) %>%
mutate_all(as.character) %>%
gather(key = Column, value = value, 2:ncol(.)) %>%
mutate(Column = as.numeric(gsub("V", "", Column)),
Row = as.numeric(Row),
value = ifelse(value == "00", NA, 1)) %>%
filter(!is.na(value))
dat
dat[10:3]
dat[3:10]
dat[3,10]
dat[10,3]
dat[10,]
dat[,3]
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red", "blue")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c("red4", "blue4")) +
theme(legend.position = "off")
dat <- image_data(im_proc3)[1,,] %>%
as.data.frame() %>%
mutate(Row = 1:nrow(.)) %>%
select(Row, everything()) %>%
mutate_all(as.character) %>%
gather(key = Column, value = value, 2:ncol(.)) %>%
mutate(Column = as.numeric(gsub("V", "", Column)),
Row = as.numeric(Row),
value = ifelse(value == "00", NA, 1)) %>%
filter(!is.na(value))
View(dat)
-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c( "blue4","red4")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 300))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c( "blue4","red4")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 200))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c( "blue4","red4")) +
theme(legend.position = "off")
ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 200))) +
geom_point() +
# scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c( "blue4","red4")) +
theme(legend.position = "off")
grafico_final <-ggplot(data = dat,
aes(x = Row,
y = Column,
colour = (Column < 200))) +
geom_point() +
scale_y_continuous(trans = "reverse") +
scale_colour_manual(values = c( "blue4","red4")) +
theme(legend.position = "off")+
ggsave("grafico_final.png", width = 4, height = 4)
earth
tempo <- image_read_pdf("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/temp.pdf")
tempo <- image_read_pdf("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/temp.pdf")
tempo <- image_read_pdf("C:/Users/nick_/OneDrive/Área de Trabalho/image_analysis/Slide/IMAGENS/temp.pdf")
image_write(tempo, path = "tempo.pdf", format = "pdf")
